# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting
on:
  push:
    branches: [ "master" ]
jobs:
  firebase-hosting:
    runs-on: ubuntu-latest
    steps:
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/checkout@v3
      - run: |
          pnpm i
          pnpm build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MF_DEMO_77739 }}'
          projectId: mf-demo-77739
          channelId: 'live'

  npm-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2

      - shell: bash
        name: publish npm packages
        run: |
          npm config -L project set '//registry.npmjs.org/:_authToken' $NPM_TOKEN
          
          reference="@mf-dev/wrapper-react"
          current=$(pnpm pkg get version | sed -r 's/\"//g')
          remote=$(pnpm show $reference version)
          if [ "$current" != "$remote" ];
          then
            echo "new version of mf-dev, publishing $current"
            pnpm -r --filter="@mf-dev/*" exec pnpm version --no-git-tag-version $current
            pnpm i
            pnpm -r --filter="@mf-dev/*" publish --no-git-checks --access public
            pnpm -r --filter="@mf-dev/*" exec pnpm version --no-git-tag-version 0.0.0
            pnpm i
          else
            echo "same version of mf-dev"
          fi
          
          reference="create-mfe"
          current=$(pnpm --filter create-mfe exec npm pkg get version | sed -r 's/\"//g')
          remote=$(pnpm show $reference version)
          if [ "$current" != "$remote" ];
          then
            echo "new version of create-mfe, publishing $current"
            pnpm i
            pnpm --filter create-mfe npm-publish || true
          else
            echo "same version of create-mfe"
          fi
          rm .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
